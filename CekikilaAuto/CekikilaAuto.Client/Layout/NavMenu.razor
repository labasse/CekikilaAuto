@implements IDisposable

@inject NavigationManager NavigationManager

<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container">
        <a class="navbar-brand" href="#"><strong>CeKiKiLa</strong></a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
            <div class="navbar-nav  ms-auto">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <NavLink href="/" class="nav-link" Match="NavLinkMatch.All">Accueil</NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink href="/item" class="nav-link">Réserver</NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink href="/offer" class="nav-link">Prêter</NavLink>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span>
                        </a>
                        <ul class="dropdown-menu">
                            <AuthorizeView>
                                <Authorized>
                                    <li>
                                        <NavLink class="dropdown-item" href="Account/Manage">
                                            @context.User.Identity?.Name
                                        </NavLink>
                                    </li>
                                    <li>
                                        <form action="Account/Logout" method="post">
                                            <AntiforgeryToken />
                                            <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                                            <button type="submit" class="dropdown-item">Logout</button>
                                        </form>
                                    </li>
                                </Authorized>
                                <NotAuthorized>
                                    <li>
                                        <NavLink class="dropdown-item" href="Account/Register">
                                            Register
                                        </NavLink>
                                    </li>
                                    <li>
                                        <NavLink class="dropdown-item" href="Account/Login">
                                            Login
                                        </NavLink>
                                    </li>
                                </NotAuthorized>
                            </AuthorizeView>
                        </ul>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</nav>
@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

