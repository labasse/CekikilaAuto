@page "/item/{Id:int=1}"
@using CekikilaAuto.Client.Layout
@using CekikilaLib

@rendermode InteractiveWebAssembly

@inject IItemsService data
@inject ILogger<ItemDetail> log
@inject NavigationManager nav

@if (item == null)
{
    <p>Loading...</p>
}
else
{
    <PageTitle>@item.Name (@Lang)</PageTitle>
    <div class="album py-5 bg-light">
        <div class="container">
            <h1>@item.Name</h1>
            <p>@item.Description</p>
            <p>
                <BadgeList Values="@item.Tags" Context="tag">
                    <ItemTemplate>
                        <strong @onclick="e => NavToTag(tag)">
                            @tag
                        </strong>
                    </ItemTemplate>
                </BadgeList>
            </p>
            @if (_displayAvailability)
            {
                <p>Dispos : ...</p>
            }
            <DateInterval 
            MinDuration=@TimeSpan.FromDays(3)
            @bind-Start="_start"
            @bind-End="_end"/>
            <p>@_start - @_end</p>
        </div>
    </div>
}
@code {
    private ItemDto? item = null;

    // Initialisation qui dépend de paramètre(s) => OnParameterSet(Async)
    protected override async Task OnParametersSetAsync()
    {
        item = await data.GetItemAsync(Id);
        if (item == null)
        {
            log.LogWarning($"Unknown object {Id}");
            nav.NavigateTo("/404");
        }
        else
        {
            log.LogInformation($"Found {Id}");
        }
    }

    [Parameter]
    public int Id { get; set; }

    private DateOnly _start = DateOnly.FromDateTime(DateTime.Now);
    private DateOnly _end = DateOnly.FromDateTime(DateTime.Now);

    private void NavToTag(string tag)
    {
        nav.NavigateTo($"/tag/{tag}");
    }

    [SupplyParameterFromQuery(Name = "av")]
    public string? DisplayAvailability { 
        get => _displayAvailability ? "1":String.Empty;
        set => _displayAvailability = value is not null; 
    }

    [CascadingParameter(Name = "Language")]
    public required string Lang { get; set; }

    private bool _displayAvailability = false; 
}
